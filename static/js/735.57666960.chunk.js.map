{"version":3,"file":"static/js/735.57666960.chunk.js","mappings":"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","sources":["pages/Libs/index.js"],"sourcesContent":["import { useMemo, useState, useRef } from 'react';\nimport { createWithRemoteLoader, useLoader } from '@kne/remote-loader';\nimport createEntry from '@kne/modules-dev/dist/create-entry';\nimport { useParams, Navigate } from 'react-router-dom';\nimport get from 'lodash/get';\nimport transform from 'lodash/transform';\nimport { withFetch } from '@kne/react-fetch';\nimport compose from '@kne/compose';\n\nconst Example = createEntry.Example;\n\nconst RemoteComponentsPage = compose(\n  withFetch,\n  createWithRemoteLoader({\n    modules: ['Filter@fields', 'Filter@getFilterValue']\n  })\n)(({ remoteModules, data }) => {\n  const { libs, libsMap } = useMemo(() => {\n    const libs = data['libs'].map(item => {\n      return {\n        label: item.name,\n        value: item.name,\n        version: Object.keys(item.versions)\n          .sort((a, b) => {\n            return new Date(item.versions[b].time) - new Date(item.versions[a].time);\n          })\n          .map(key => {\n            return {\n              label: `v${key}`,\n              value: key\n            };\n          })\n      };\n    });\n    const libsMap = new Map(libs.map(item => [item.value, item]));\n    return { libs, libsMap };\n  }, [data]);\n\n  const [fields, getFilterValue] = remoteModules;\n  const [filter, setFilter] = useState([]);\n\n  const { id: currentComponent } = useParams();\n  const filterValue = getFilterValue(filter);\n  const libNameRef = useRef(null);\n  const currentComponentNameRef = useRef(null);\n  const filterVersion = filterValue['version'];\n\n  const moduleTokens = useMemo(() => {\n    return libs.map(({ value, version }) => {\n      if (libNameRef.current === value) {\n        return `${value}/${filterVersion || get(version, '[0].value')}:components`;\n      }\n      return `${value}/${get(version, '[0].value')}:components`;\n    });\n  }, [libs, filterVersion]);\n\n  const {\n    loading,\n    error,\n    remoteModules: targetModules\n  } = useLoader({\n    modules: moduleTokens\n  });\n\n  const { components, currentComponentName } = useMemo(() => {\n    if (loading || error) {\n      return {};\n    }\n    const libKeys = Array.from(libsMap.keys());\n    const components = transform(\n      targetModules,\n      (result, value, index) => {\n        Object.assign(\n          result,\n          transform(\n            value,\n            (result, value, key) => {\n              result[key] = Object.assign({}, value, { libKey: libKeys[index] });\n            },\n            {}\n          )\n        );\n      },\n      {}\n    );\n\n    const currentComponentName = (() => {\n      if (currentComponent && components[currentComponent]) {\n        libNameRef.current = components[currentComponent].libKey;\n        return currentComponent;\n      }\n\n      libNameRef.current = get(Object.values(components), '[0].libKey');\n\n      return get(Object.keys(components), '[0]');\n    })();\n\n    const version = (() => {\n      if (currentComponentNameRef.current !== currentComponentName) {\n        setFilter(filter => {\n          return filter.filter(({ name }) => name !== 'version');\n        });\n        currentComponentNameRef.current = currentComponentName;\n        return get(libsMap.get(components[currentComponentName].libKey), 'version[0].value');\n      }\n      return filterVersion || get(libsMap.get(components[currentComponentName].libKey), 'version[0].value');\n    })();\n\n    return { components, currentComponentName, version };\n  }, [loading, error, targetModules, filterVersion, currentComponent, libsMap]);\n\n  if (loading) {\n    return null;\n  }\n\n  if (error) {\n    return <Navigate to={`/error?msg=加载远程组件库可能不符合规范，您可以向开发者报告该问题`} replace />;\n  }\n\n  const { AdvancedSelectFilterItem } = fields;\n\n  const libKey = get(components, `${currentComponentName}.libKey`);\n\n  return (\n    <Example\n      baseUrl=\"/libs\"\n      readme={components}\n      pageProps={\n        {\n          /*filter: {\n                            value: filter, onChange: setFilter, list: [[<AdvancedSelectFilterItem\n                                label=\"版本\"\n                                name=\"version\"\n                                single\n                                api={{\n                                    data: libKey, loader: ({data}) => {\n                                        return {\n                                            pageData: get(libsMap.get(data), 'version', [])\n                                        };\n                                    }\n                                }}\n                            />]]\n                        }*/\n        }\n      }\n    />\n  );\n});\n\nconst Libs = createWithRemoteLoader({\n  modules: ['Global@usePreset']\n})(({ remoteModules }) => {\n  const [usePreset] = remoteModules;\n  const { apis } = usePreset();\n  return (\n    <RemoteComponentsPage\n      {...Object.assign({}, apis.manifest.getDetail, {\n        transformResponse: response => {\n          return { data: { code: 200, results: response.data } };\n        }\n      })}\n    />\n  );\n});\n\nexport default Libs;\n"],"names":["Example","createEntry","RemoteComponentsPage","compose","withFetch","createWithRemoteLoader","modules","_ref","remoteModules","data","libs","libsMap","useMemo","map","item","label","name","value","version","Object","keys","versions","sort","a","b","Date","time","key","concat","Map","fields","getFilterValue","filter","setFilter","useState","id","currentComponent","useParams","filterValue","libNameRef","useRef","currentComponentNameRef","filterVersion","moduleTokens","_ref2","current","get","loading","error","targetModules","useLoader","components","currentComponentName","libKeys","Array","from","transform","result","index","assign","libKey","values","_ref3","_jsx","Navigate","to","replace","AdvancedSelectFilterItem","baseUrl","readme","pageProps","_ref4","usePreset","apis","manifest","getDetail","transformResponse","response","code","results"],"sourceRoot":""}